[{"/home/jay/Desktop/Code/web_personal/src/sections/styles/HeaderStyles.tsx":"1","/home/jay/Desktop/Code/web_personal/src/sections/Header.tsx":"2","/home/jay/Desktop/Code/web_personal/src/sections/Projects.tsx":"3","/home/jay/Desktop/Code/web_personal/src/components/Collapse.tsx":"4","/home/jay/Desktop/Code/web_personal/src/sections/styles/SkillsStyles.tsx":"5","/home/jay/Desktop/Code/web_personal/src/sections/Connect.tsx":"6","/home/jay/Desktop/Code/web_personal/src/sections/styles/ConnectStyles.tsx":"7"},{"size":2166,"mtime":1610312079240,"results":"8","hashOfConfig":"9"},{"size":5150,"mtime":1610312007060,"results":"10","hashOfConfig":"9"},{"size":5536,"mtime":1610306751860,"results":"11","hashOfConfig":"9"},{"size":9450,"mtime":1610306751860,"results":"12","hashOfConfig":"9"},{"size":5686,"mtime":1610306751860,"results":"13","hashOfConfig":"9"},{"size":3023,"mtime":1610314256350,"results":"14","hashOfConfig":"9"},{"size":2081,"mtime":1610313055270,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nbdesj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jay/Desktop/Code/web_personal/src/sections/styles/HeaderStyles.tsx",[],"/home/jay/Desktop/Code/web_personal/src/sections/Header.tsx",["32"],"import React, { useEffect, useState } from 'react'\nimport {\n    HeaderContainer,\n    LogoContainer,\n    ItemContainer,\n    HeaderItem,\n    WidthManager,\n    Filler,\n    Hamburger,\n    HamburgerContainer,\n    Sections,\n    SmallItemContainer,\n    HeaderTop,\n    HeaderNav,\n} from './styles/HeaderStyles'\nimport { Collapse } from 'react-collapse'\nimport './styles/HeaderStyles.css'\n\ninterface Props {\n    refs: {\n        skillsRef: React.RefObject<HTMLDivElement>\n        experienceRef: React.RefObject<HTMLDivElement>\n        projectsRef: React.RefObject<HTMLDivElement>\n        connectRef: React.RefObject<HTMLDivElement>\n    }\n}\n\nconst scrollToTargetAdjusted = (el: HTMLDivElement) => {\n    const headerOffset = 100\n    const elementPosition = el.getBoundingClientRect().top\n    const offsetPosition = elementPosition - headerOffset\n    const windowPosition = window.pageYOffset\n\n    window.scrollTo({\n        top: windowPosition + offsetPosition,\n        behavior: 'smooth',\n    })\n}\n\nconst Header = ({ refs }: Props) => {\n    const [isTop, setIsTop] = useState(true)\n    const [open, setOpen] = useState(false)\n\n    useEffect(() => {\n        window.onscroll = () => {\n            if (window.pageYOffset < 1) {\n                setIsTop(true)\n            } else if (isTop) {\n                setIsTop(false)\n            }\n        }\n        return () => {\n            window.onscroll = null\n        }\n    }, [isTop])\n\n    const scrollTo = (ref: React.RefObject<HTMLDivElement>) => {\n        if (ref.current == null) {\n            return\n        }\n        scrollToTargetAdjusted(ref.current)\n    }\n\n    const sscrollTo = (ref: React.RefObject<HTMLDivElement>) => {\n        if (ref.current == null) {\n            return\n        }\n        setOpen(false)\n        scrollToTargetAdjusted(ref.current)\n    }\n\n    return (\n        <>\n            <Filler />\n            <WidthManager isTop={isTop && !open}>\n                <HeaderContainer>\n                    <HeaderTop>\n                        <LogoContainer>\n                            <HeaderItem>jay karp</HeaderItem>\n                        </LogoContainer>\n                        <HamburgerContainer>\n                            <Hamburger\n                                toggled={open}\n                                toggle={setOpen}\n                                easing={'ease-in-out'}\n                                rounded\n                            />\n                        </HamburgerContainer>\n                        <ItemContainer>\n                            <HeaderItem\n                                onClick={() => scrollTo(refs.skillsRef)}\n                            >\n                                skills\n                            </HeaderItem>\n                            <HeaderItem\n                                onClick={() => scrollTo(refs.experienceRef)}\n                            >\n                                experience\n                            </HeaderItem>\n                            <HeaderItem\n                                onClick={() => scrollTo(refs.projectsRef)}\n                            >\n                                projects\n                            </HeaderItem>\n                            <HeaderItem\n                                onClick={() => scrollTo(refs.connectRef)}\n                            >\n                                connect\n                            </HeaderItem>\n                        </ItemContainer>\n                    </HeaderTop>\n                    <HeaderNav>\n                        <Collapse\n                            isOpened={open}\n                            theme={{\n                                collapse: 'headercollapse',\n                                content: 'headercontent',\n                            }}\n                        >\n                            <SmallItemContainer>\n                                <HeaderItem\n                                    onClick={() => sscrollTo(refs.skillsRef)}\n                                >\n                                    skills\n                                </HeaderItem>\n                                <HeaderItem\n                                    onClick={() =>\n                                        sscrollTo(refs.experienceRef)\n                                    }\n                                >\n                                    experience\n                                </HeaderItem>\n                                <HeaderItem\n                                    onClick={() => sscrollTo(refs.projectsRef)}\n                                >\n                                    projects\n                                </HeaderItem>\n                                <HeaderItem\n                                    onClick={() => sscrollTo(refs.connectRef)}\n                                >\n                                    connect\n                                </HeaderItem>\n                            </SmallItemContainer>\n                        </Collapse>\n                    </HeaderNav>\n                </HeaderContainer>\n            </WidthManager>\n        </>\n    )\n}\n\nexport default Header\n",["33","34"],"/home/jay/Desktop/Code/web_personal/src/sections/Projects.tsx",[],"/home/jay/Desktop/Code/web_personal/src/components/Collapse.tsx",[],"/home/jay/Desktop/Code/web_personal/src/sections/styles/SkillsStyles.tsx",[],"/home/jay/Desktop/Code/web_personal/src/sections/Connect.tsx",["35"],"/home/jay/Desktop/Code/web_personal/src/sections/styles/ConnectStyles.tsx",[],{"ruleId":"36","severity":1,"message":"37","line":11,"column":5,"nodeType":"38","messageId":"39","endLine":11,"endColumn":13},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":35,"column":8,"nodeType":"46","endLine":35,"endColumn":10,"suggestions":"47"},"@typescript-eslint/no-unused-vars","'Sections' is defined but never used.","Identifier","unusedVar","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [email]",{"range":"53","text":"54"},[962,964],"[email]"]